AWSTemplateFormatVersion: '2010-09-09'
Outputs:
  BucketName:
    Description: Name of the Amazon S3 bucket containing our source objects with an
      events configuration to kick off our state machine.
    Value:
      Ref: HealthInfoBucket
Parameters:
  CognitoSecretName:
    Default: MM-CMClientCognitoSecret
    Type: String
  FHIRAPIEndpoint:
    Default: https://0ic0tntg82.execute-api.us-west-2.amazonaws.com/Prod/
    Type: String
Resources:
  CognitoSecretStore:
    Properties:
      Description: This secret has a hardcoded password in SecretString (use GenerateSecretString
        instead)
      Name:
        Ref: CognitoSecretName
      SecretString: '{"username":"cm-user","password":"Master123!","client-id":"5obgic32lccfpqeef66ai1s0v"}'
      Tags:
      - Key: AppName
        Value: CM-FHIR-Integration
    Type: AWS::SecretsManager::Secret
  FHIRDataExtractFunction:
    Properties:
      CodeUri: s3://fhir-code-bucket/c492987632247cf657d39bed783ffe8c
      Handler: com.amazonaws.lab.FHIRDataHandler::handleRequest
      MemorySize: 512
      Policies:
        Statement:
        - Action:
          - s3:GetObject
          - s3:PutObject
          - s3:ListBucket
          Effect: Allow
          Resource:
          - Fn::Sub: ${HealthInfoBucket.Arn}/*
        - Action:
          - logs:*
          Effect: Allow
          Resource:
          - '*'
      Runtime: java8
      Timeout: 300
      Tracing: Active
    Type: AWS::Serverless::Function
  FHIRResourceBuilderFunction:
    Properties:
      CodeUri: s3://fhir-code-bucket/c492987632247cf657d39bed783ffe8c
      Environment:
        Variables:
          COGNITO_SECRET_NAME:
            Ref: CognitoSecretName
          FHIR_API_ENDPOINT:
            Ref: FHIRAPIEndpoint
      Handler: com.amazonaws.lab.FHIRResourceBuilder::handleRequest
      MemorySize: 512
      Policies:
        Statement:
        - Action:
          - s3:GetObject
          - s3:PutObject
          - s3:ListBucket
          - secretsmanager:GetSecretValue
          Effect: Allow
          Resource:
          - Fn::Sub: ${HealthInfoBucket.Arn}/*
          - Ref: CognitoSecretStore
        - Action:
          - cognito-sync:*
          - cognito-identity:*
          Effect: Allow
          Resource:
          - '*'
        - Action:
          - logs:*
          Effect: Allow
          Resource:
          - '*'
      Runtime: java8
      Timeout: 300
      Tracing: Active
    Type: AWS::Serverless::Function
  HL7DataExtractFunction:
    Properties:
      CodeUri: s3://fhir-code-bucket/c492987632247cf657d39bed783ffe8c
      Handler: com.amazonaws.lab.HL7DataHandler::handleRequest
      MemorySize: 512
      Policies:
        Statement:
        - Action:
          - s3:GetObject
          - s3:PutObject
          - s3:ListBucket
          Effect: Allow
          Resource:
          - Fn::Sub: ${HealthInfoBucket.Arn}/*
        - Action:
          - logs:*
          Effect: Allow
          Resource:
          - '*'
      Runtime: java8
      Timeout: 300
      Tracing: Active
    Type: AWS::Serverless::Function
  HealthDataEventFunction:
    Properties:
      CodeUri: s3://fhir-code-bucket/c492987632247cf657d39bed783ffe8c
      Environment:
        Variables:
          STATE_MACHINE_ARN:
            Ref: HealthDataStateMachine
      Events:
        HealthDataSQSEvent:
          Properties:
            BatchSize: 1
            Queue:
              Fn::GetAtt:
              - HealthInfoNotifyQueue
              - Arn
          Type: SQS
      Handler: com.amazonaws.lab.HealthDataEventHandler::handleRequest
      MemorySize: 512
      Policies:
        Statement:
        - Action:
          - sqs:ReceiveMessage
          - sqs:DeleteMessage
          - sqs:DeleteMessage
          - states:StartExecution
          Effect: Allow
          Resource:
          - Fn::GetAtt:
            - HealthInfoNotifyQueue
            - Arn
          - Ref: HealthDataStateMachine
        - Action:
          - s3:GetObject
          - s3:PutObject
          - s3:ListBucket
          - s3:DeleteObject
          Effect: Allow
          Resource:
          - Fn::Sub: ${HealthInfoBucket.Arn}/*
        - Action:
          - logs:*
          Effect: Allow
          Resource:
          - '*'
      Runtime: java8
      Timeout: 300
      Tracing: Active
    Type: AWS::Serverless::Function
  HealthDataRouterFunction:
    Properties:
      CodeUri: s3://fhir-code-bucket/c492987632247cf657d39bed783ffe8c
      Handler: com.amazonaws.lab.HealthDataRouter::handleRequest
      MemorySize: 512
      Runtime: java8
      Timeout: 300
      Tracing: Active
    Type: AWS::Serverless::Function
  HealthDataStateMachine:
    Properties:
      DefinitionString:
        Fn::Sub:
        - "{\n  \"Comment\": \"State machine that orchestrates the processing of our\
          \ pipeline through various Lambda functions\",\n  \"StartAt\": \"HealthDataRouter\"\
          ,\n  \"States\": {\n    \"HealthDataRouter\": {\n      \"Type\": \"Task\"\
          ,\n      \"Resource\": \"${HealthDataRouterLambdaArn}\",\n      \"Next\"\
          : \"HealthDataTypeChoice\"\n    },\n    \"HealthDataTypeChoice\": {\n  \
          \    \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"\
          Variable\": \"$.DataType\",\n          \"StringEquals\": \"hl7\",\n    \
          \      \"Next\": \"ExtractHL7\"\n        },\n        {\n          \"Variable\"\
          : \"$.DataType\",\n          \"StringEquals\": \"fhir\",\n          \"Next\"\
          : \"ExtractFHIR\"\n        }\n      ],\n      \"Default\": \"DataTypeFailure\"\
          \n    },\n    \"ExtractHL7\": {\n      \"Type\": \"Task\",\n      \"Resource\"\
          : \"${HL7DataExtractFunction}\",\n      \"Next\": \"SendToCM\"\n    },\n\
          \    \"ExtractFHIR\": {\n      \"Type\": \"Task\",\n      \"Resource\":\
          \ \"${FHIRDataExtractFunction}\",\n      \"Next\": \"SendToCM\"\n    },\n\
          \    \"SendToCM\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"\
          ${SendToCMFunction}\",\n      \"Next\": \"AssembleFHIR\"\n    },\n    \"\
          AssembleFHIR\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${FHIRResourceBuilderFunction}\"\
          ,\n      \"End\": true\n    },\n    \"DataTypeFailure\": {\n      \"Type\"\
          : \"Fail\",\n      \"Cause\": \"S3 key did not match 'hl7' or 'fhir' structure,\
          \ or output error.\"\n    }\n  }\n}"
        - FHIRDataExtractFunction:
            Fn::GetAtt:
            - FHIRDataExtractFunction
            - Arn
          FHIRResourceBuilderFunction:
            Fn::GetAtt:
            - FHIRResourceBuilderFunction
            - Arn
          HL7DataExtractFunction:
            Fn::GetAtt:
            - HL7DataExtractFunction
            - Arn
          HealthDataRouterLambdaArn:
            Fn::GetAtt:
            - HealthDataRouterFunction
            - Arn
          SendToCMFunction:
            Fn::GetAtt:
            - SendToCMFunction
            - Arn
      RoleArn:
        Fn::GetAtt:
        - HealthDataStatesExecutionRole
        - Arn
    Type: AWS::StepFunctions::StateMachine
  HealthDataStatesExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - Fn::Sub: states.${AWS::Region}.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - lambda:InvokeFunction
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: HealthDataStatesExecutionPolicy
    Type: AWS::IAM::Role
  HealthInfoBucket:
    DeletionPolicy: Retain
    DependsOn: HealthInfoNotifyQueuePolicy
    Properties:
      NotificationConfiguration:
        QueueConfigurations:
        - Event: s3:ObjectCreated:*
          Filter:
            S3Key:
              Rules:
              - Name: prefix
                Value: input/hl7/
          Queue:
            Fn::GetAtt:
            - HealthInfoNotifyQueue
            - Arn
        - Event: s3:ObjectCreated:*
          Filter:
            S3Key:
              Rules:
              - Name: prefix
                Value: input/fhir/
          Queue:
            Fn::GetAtt:
            - HealthInfoNotifyQueue
            - Arn
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket
  HealthInfoNotifyQueue:
    Properties:
      Tags:
      - Key: QueueType
        Value: HealthInfoQueue
      VisibilityTimeout: 360
    Type: AWS::SQS::Queue
  HealthInfoNotifyQueuePolicy:
    Properties:
      PolicyDocument:
        Id: QueuePolicy
        Statement:
        - Action:
          - sqs:SendMessage
          Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Resource: '*'
          Sid: sendMessagesToQueue
        Version: '2012-10-17'
      Queues:
      - Ref: HealthInfoNotifyQueue
    Type: AWS::SQS::QueuePolicy
  SendToCMFunction:
    Properties:
      CodeUri: s3://fhir-code-bucket/c492987632247cf657d39bed783ffe8c
      Handler: com.amazonaws.lab.SendToCM::handleRequest
      MemorySize: 512
      Policies:
        Statement:
        - Action:
          - s3:GetObject
          - s3:PutObject
          - s3:ListBucket
          Effect: Allow
          Resource:
          - Fn::Sub: ${HealthInfoBucket.Arn}/*
        - Action:
          - comprehendmedical:DetectEntities
          Effect: Allow
          Resource:
          - '*'
        - Action:
          - logs:*
          Effect: Allow
          Resource:
          - '*'
      Runtime: java8
      Timeout: 300
      Tracing: Active
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
